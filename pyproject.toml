[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "insights-ansible-playbook-verifier"
description = "Verifier for GPG-signed Ansible playbooks"
version = "0.0.0"
readme = "README.md"
license = {file = "LICENSE"}
authors = [{name = "CSI Client Tools", email = "csi-client-tools-bugs@redhat.com"}]

requires-python = ">= 3.9"
dependencies = [
    "pyyaml"
]
classifiers = [
    "License :: OSI Approved :: MIT",
    "Programming Language :: Python :: 3",
]
keywords = [
    "Red Hat",
    "Red Hat Insights",
    "Ansible",
    "gnupg",
]

[tool.setuptools]
package-dir = {"" = "python"}
packages = [
    "insights_ansible_playbook_lib",
    "insights_ansible_playbook_verifier",
]

[project.optional-dependencies]
dev = ["pytest", "ruff", "mypy", "types-PyYAML"]

[project.scripts]
insights-ansible-playbook-verifier = "insights_ansible_playbook_verifier.app:main"

[tool.mypy]
mypy_path = "python/"
packages = "insights_ansible_playbook_lib,insights_ansible_playbook_verifier"

disallow_any_unimported = true

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

strict_equality = true

pretty = true
warn_incomplete_stub = true
warn_unused_configs = true

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "def __str__",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Ignore logging setup
    "def _configure_logging",
    ]

ignore_errors = true
